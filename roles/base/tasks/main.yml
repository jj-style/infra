- name: create main user
  tags: bootstrap
  user:
    name: "{{ user.username }}"
    groups:
      - root
    append: true

- name: add sudoers file for main user
  tags: bootstrap
  ansible.builtin.template:
    src: users/sudoer_user.j2
    dest: "/etc/sudoers.d/{{ user.username }}"
    owner: root
    group: root
    mode: 0440

- name: add ssh public key for main user
  tags: ssh, bootstrap
  authorized_key:
    user: "{{ user.username }}"
    key: "{{ item }}"
  loop: "{{ ssh_public_keys }}"

- name: Prevent SSH Password Authentication
  tags: ssh, bootstrap
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?\s*PasswordAuthentication\s'
    line: "PasswordAuthentication no"
    state: present
  notify:
    - restart sshd

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

- name: install packages
  tags: install, general
  package:
    name: "{{ item }}"
    update_cache: true
  loop: "{{ pkgs | default([]) }}"

- name: Add the flathub flatpak repository remote to the user installation
  become_user: "{{ user.username }}"
  tags: flatpak
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user
  when: '"flatpak" in pkgs'

- name: install general flatpak packages
  become_user: "{{ user.username }}"
  tags: install, general, flatpak
  community.general.flatpak:
    name: "{{ item }}"
    state: present
    method: user
  loop: "{{ flatpak_pkgs | default([]) }}"
  when: '"flatpak" in pkgs'

- name: install docker
  include_role:
    name: docker
    apply:
      tags: docker
  tags: docker
  when:
    - ansible_distribution in ["Debian", "Pop!_OS", "Ubuntu"]
    - install_docker | bool

- name: start/enable services
  tags: systemd
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: "{{ systemd_services }}"